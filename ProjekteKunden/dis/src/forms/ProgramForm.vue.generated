<template>
    <v-container fluid>
        <v-flex align-start>
            <h2>Program</h2>
            <dis-form ref="disForm" formName="program" dataModel="ProjectProgram" :fields="simpleFields" :requiredFilters="requiredFilters" :filterDataModels="filterDataModels" :calculatedFields="calculatedFields">
                <template v-slot:form-fields="{fields, hasNumberValidator, getInputComponent, formScenario, selectedItem, formModel, serverValidationErrors}">
                        <v-layout wrap mb-3>
                            <v-flex v-if="!'Program Information'.startsWith('-')" xs12 pl-2 pt-2 class="title">
                                Program Information
                            </v-flex>
                            <v-flex lg2 md3 sm6 xs12 pr-2 pl-2>
                                <DisTextInput
                                        :class="{'c-dis-form__input': true, 'c-dis-form__input--modified': formScenario === 'edit' && selectedItem['program_name'] !== formModel['program_name']}"
                                        :disabled="false"
                                        :validators="validators['program_name']"
                                        name="program_name"
                                        label="Program Name"
                                        :serverValidationErrors="serverValidationErrors"
                                        v-model="formModel['program_name']"
                                        :readonly="formScenario === 'view'"/>
                            </v-flex>
                            <v-flex lg2 md3 sm6 xs12 pr-2 pl-2>
                                <DisTextInput
                                        :class="{'c-dis-form__input': true, 'c-dis-form__input--modified': formScenario === 'edit' && selectedItem['program_acronym'] !== formModel['program_acronym']}"
                                        :disabled="false"
                                        :validators="validators['program_acronym']"
                                        name="program_acronym"
                                        label="Program Acronym"
                                        :serverValidationErrors="serverValidationErrors"
                                        v-model="formModel['program_acronym']"
                                        :readonly="formScenario === 'view'"/>
                            </v-flex>
                            <v-flex lg2 md3 sm6 xs12 pr-2 pl-2>
                                <DisTextInput
                                        :class="{'c-dis-form__input': true, 'c-dis-form__input--modified': formScenario === 'edit' && selectedItem['comment'] !== formModel['comment']}"
                                        :disabled="false"
                                        :validators="validators['comment']"
                                        name="comment"
                                        label="Additional Information"
                                        :serverValidationErrors="serverValidationErrors"
                                        v-model="formModel['comment']"
                                        :readonly="formScenario === 'view'"/>
                            </v-flex>
                        </v-layout>
                </template>
                <template v-slot:extra-form-actions="{ selectedItem, onSubFormClick }">
                    <v-btn round class="c-dis-form__btn-sub-form" @click="onSubFormClick('expedition', subForms['expedition'])" color="indigo darken-4" dark :disabled="!selectedItem">
                        expedition <v-icon>arrow_downward</v-icon>
                    </v-btn>
                </template>
            </dis-form>
        </v-flex>
    </v-container>
</template>

<script>
export default {
  name: 'ProgramForm',
  created () {
    this.validators = {}
    this.validators['program_name'] = JSON.parse('[{"type":"required"},{"type":"string","min":null,"max":null}]')
    this.validators['program_acronym'] = JSON.parse('[{"type":"required"},{"type":"string","min":null,"max":null}]')
    this.validators['comment'] = JSON.parse('[{"type":"string","min":null,"max":null}]')
    this.selectSources = {}
    this.calculatedFields = {}
    this.simpleFields = JSON.parse('[{"name":"program_name","label":"Program Name","description":"","group":"Program Information","order":0,"inputType":"text","searchable":true},{"name":"program_acronym","label":"Program Acronym","description":"","group":"Program Information","order":1,"inputType":"text","searchable":true},{"name":"comment","label":"Additional Information","description":"","group":"Program Information","order":2,"inputType":"text","searchable":true}]')
    this.requiredFilters = JSON.parse('[]')
    this.subForms = JSON.parse('{"expedition":{"buttonLabel":"expedition","url":"/forms/expedition-form","filter":[]}}')
    this.supForms = JSON.parse('[]')
    this.filterDataModels = JSON.parse('{}')
  }
}
</script>

<style scoped>

</style>

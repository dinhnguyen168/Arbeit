<?php

namespace app\models\base;

use Yii;

/**
 * This is the generated model base class for table "contact_person".
 * DO NOT EDIT THIS CLASS MANUALLY!
 *
 * @property int $id ID
 * @property string|null $first_name First Name
 * @property string|null $last_name Last Name
 * @property string|null $gender Gender
 * @property string|null $title Title
 * @property string|null $orcid Orcid
 * @property string|null $email Email Address
 * @property string|null $phone Phone
 * @property string|null $mobile Mobile Number
 * @property string|null $comment Additional Information
 * @property string|null $affiliation Affiliation
 * @property string|null $role Role in mDIS
 * @property string|null $person_acronym Person Acronym
 */
abstract class BaseContactPerson extends \app\models\core\Base
{
    /* [i.e columnName => [displayColumn, relationName],[..]] */
    const MANY_TO_MANY_COLUMNS = [];
    /* [[i.e columnName => displayColumn],[..]] */
    const ONE_TO_MANY_COLUMNS = [];

    const MODULE = 'Contact';
    const SHORT_NAME = 'Person';

    const NAME_ATTRIBUTE = 'id';
    const PARENT_CLASSNAME = '';
    const ANCESTORS = [];
    const DEFAULT_VALUES = [];


    public static function getFormFilters() {
        return [];
    }

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'contact_person';
    }
    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return array_merge(parent::rules(), [
            [['affiliation', 'role'],'\app\components\validators\MultipleValuesStringValidator'],
            [['first_name', 'last_name', 'gender', 'title', 'orcid', 'email', 'phone', 'mobile', 'comment', 'affiliation', 'role', 'person_acronym'], 'string', 'max' => 255],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'first_name' => Yii::t('app', 'First Name'),
            'last_name' => Yii::t('app', 'Last Name'),
            'gender' => Yii::t('app', 'Gender'),
            'title' => Yii::t('app', 'Title'),
            'orcid' => Yii::t('app', 'Orcid'),
            'email' => Yii::t('app', 'Email Address'),
            'phone' => Yii::t('app', 'Phone'),
            'mobile' => Yii::t('app', 'Mobile Number'),
            'comment' => Yii::t('app', 'Additional Information'),
            'affiliation' => Yii::t('app', 'Affiliation'),
            'role' => Yii::t('app', 'Role in mDIS'),
            'person_acronym' => Yii::t('app', 'Person Acronym'),
            'full_name' => Yii::t('app', 'Full Name'),
        ];
    }


    public function getFull_name()
    {
        $model = $this;
        return $model->first_name . ' ' . $model->last_name;
    }


    public function fields()
    {
        $fields = [
            'full_name' => function($model) { return $model->first_name . ' ' . $model->last_name; },
            'affiliation' => function($model) {
                if (!empty($model->affiliation)) {
                    return explode(';', $model->affiliation);
                } else {
                    return [];
                }
            },
            'role' => function($model) {
                if (!empty($model->role)) {
                    return explode(';', $model->role);
                } else {
                    return [];
                }
            },
        ];
        return array_merge(parent::fields(), $fields);
    }

    public function load($data, $formName = null)
    {
        return parent::load($data, $formName);
    }




    /**
    * {@inheritdoc}
    */
    public function beforeDelete()
    {
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }


}


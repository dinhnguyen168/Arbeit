<?php

namespace app\models\base;

use Yii;
use yii\base\Model;
use yii\data\ActiveDataProvider;
use \app\models\ProjectHole;

/**
* This is the search base model class for model "ProjectHole".
* DO NOT EDIT THIS FILE.
*/
abstract class BaseProjectHoleSearch extends ProjectHole
{
    use \app\models\core\SearchModelTrait;

    public $program_id;
    public $expedition_id;

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['id', 'site_id', 'combined_id', 'hole', 'hole_name', 'igsn', 'drilling_method', 'depth_water', 'drillers_reference_height', 'latitude', 'longitude', 'coordinate_x', 'coordinate_y', 'elevation', 'spatial_reference_system', 'direction', 'inclination', 'platform_name', 'platform_operator', 'platform_type', 'platform_description', 'platform_manager', 'methods_in_hole', 'gear', 'start_date', 'end_date', 'moratorium_start', 'moratorium_end', 'repository_name', 'comment', 'comment_identifier', 'comment_drillers_reference', 'comment_elevation', 'comment_spatial_reference', 'comment_repository', 'program_id', 'expedition_id'],'safe'],
        ];
    }

    public function getExtraSortAttributes () {
        return [
        ];
    }

    protected function addQueryColumns($query) {
        $this->addQueryColumn($query, 'id', 'number');
        $this->addQueryColumn($query, 'site_id', 'number');
        $this->addQueryColumn($query, 'combined_id', 'string');
        $this->addQueryColumn($query, 'hole', 'string');
        $this->addQueryColumn($query, 'hole_name', 'string');
        $this->addQueryColumn($query, 'igsn', 'string');
        $this->addQueryColumn($query, 'drilling_method', 'string');
        $this->addQueryColumn($query, 'depth_water', 'number');
        $this->addQueryColumn($query, 'drillers_reference_height', 'number');
        $this->addQueryColumn($query, 'latitude', 'number');
        $this->addQueryColumn($query, 'longitude', 'number');
        $this->addQueryColumn($query, 'coordinate_x', 'number');
        $this->addQueryColumn($query, 'coordinate_y', 'number');
        $this->addQueryColumn($query, 'elevation', 'number');
        $this->addQueryColumn($query, 'spatial_reference_system', 'string');
        $this->addQueryColumn($query, 'direction', 'string');
        $this->addQueryColumn($query, 'inclination', 'string');
        $this->addQueryColumn($query, 'platform_name', 'string');
        $this->addQueryColumn($query, 'platform_operator', 'string');
        $this->addQueryColumn($query, 'platform_type', 'string');
        $this->addQueryColumn($query, 'platform_description', 'string');
        $this->addQueryColumn($query, 'methods_in_hole', 'string');
        $this->addQueryColumn($query, 'gear', 'string');
        $this->addQueryColumn($query, 'start_date', 'string');
        $this->addQueryColumn($query, 'end_date', 'string');
        $this->addQueryColumn($query, 'moratorium_start', 'string');
        $this->addQueryColumn($query, 'moratorium_end', 'string');
        $this->addQueryColumn($query, 'comment', 'string');
        $this->addQueryColumn($query, 'comment_identifier', 'string');
        $this->addQueryColumn($query, 'comment_drillers_reference', 'string');
        $this->addQueryColumn($query, 'comment_elevation', 'string');
        $this->addQueryColumn($query, 'comment_spatial_reference', 'string');
        $this->addQueryColumn($query, 'comment_repository', 'string');
        $this->addQueryColumn($query, 'platform_manager', 'string');
        $this->addQueryColumn($query, 'repository_name', 'string');
    }

    protected function addQuerySearchAttributes($query) {
        $joins = [];
        $this->addQuerySearchAttribute($query, 'program_id', 'project_expedition', 'project_site.expedition_id', 'project_expedition.id', $joins);
        $this->addQuerySearchAttribute($query, 'expedition_id', 'project_site', 'project_hole.site_id', 'project_site.id', $joins);
        $this->createSearchJoins($query, $joins);
    }

}
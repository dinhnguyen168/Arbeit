<?php

namespace app\models\base;

use Yii;
use app\models\ProjectExpedition;

/**
 * This is the generated model base class for table "project_program".
 * DO NOT EDIT THIS CLASS MANUALLY!
 *
 * @property int $id Id
 * @property string|null $program_name Program Name
 * @property string|null $program_acronym Program Acronym
 * @property string|null $comment Additional Information
 *
 * @property ProjectExpedition[] $projectExpeditions
 */
abstract class BaseProjectProgram extends \app\models\core\Base
{
    /* [i.e columnName => [displayColumn, relationName],[..]] */
    const MANY_TO_MANY_COLUMNS = [];
    /* [[i.e columnName => displayColumn],[..]] */
    const ONE_TO_MANY_COLUMNS = [];

    const MODULE = 'Project';
    const SHORT_NAME = 'Program';

    const NAME_ATTRIBUTE = 'program_name';
    const PARENT_CLASSNAME = '';
    const ANCESTORS = [];
    const DEFAULT_VALUES = [];


    public static function getFormFilters() {
        return [];
    }

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'project_program';
    }
    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return array_merge(parent::rules(), [
            [['program_name', 'comment'], 'string', 'max' => 255],
            [['program_acronym'], 'string', 'max' => 10],
            [['program_name', 'program_acronym'],'required'],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'Id'),
            'program_name' => Yii::t('app', 'Program Name'),
            'program_acronym' => Yii::t('app', 'Program Acronym'),
            'comment' => Yii::t('app', 'Additional Information'),
        ];
    }



    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProjectExpeditions()
    {
        return $this->hasMany(ProjectExpedition::className(), ['program_id' => 'id']);
    }

    public function fields()
    {
        $fields = [
        ];
        return array_merge(parent::fields(), $fields);
    }

    public function load($data, $formName = null)
    {
        return parent::load($data, $formName);
    }




    /**
    * {@inheritdoc}
    */
    public function beforeDelete()
    {
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function getIconUrl() {
        $filename = "img/logos/" . $this->program . ".png";
        if (!file_exists(\Yii::getAlias("@app/../web/") . $filename)) {
            $filename = "img/logos/none.png";
        }
        return \Yii::getAlias("@web/") . $filename;
    }
}

